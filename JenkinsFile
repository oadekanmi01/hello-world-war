pipeline {
    agent any
	options {
	  skipDefaultCheckout()
	  buildDiscarder(logRotator(artifactDaysToKeepStr: '30', artifactNumToKeepStr: '30', daysToKeepStr: '30', numToKeepStr: '30'))
	  disableConcurrentBuilds()
	
	}
	stages {
		stage('Verify Tools') {
		  parallel {
		    stage('Verify Git') {
		      steps {
		        sh 'git --version'
		      }
		    }
		    stage('Verify Maven') {
		      steps {
		        sh 'mvn -v'
		      }
		    }
		  }
		}
		stage('SCM checkout') {
		    steps {
				catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
               sh "exit 0"
               }      
			   sh 'mvn clean install -Dmaven.test.skip=true'
			   archiveArtifacts artifacts: 'target/hello-world-war-1.0.0.war'
				  
			}
		}
		stage('DeployToTest') {
		    when {
		        branch 'master'
		    }
		    steps {
		        withCredentials([usernamePassword(credentialsId: 'web-App', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
		            sshPublisher(
		                failOnError: true,
		                continueOnError: false,
		                publishers: [
		                    sshPublisherDesc(
		                        configName: 'test-dz-ec2',
		                        sshCredentials: [
		                            username: "$USERNAME",
		                            encryptedPassphrase: "$USERPASS"
		                        ], 
		                        transfers: [
		                            sshTransfer(
		                                sourceFiles: 'target/hello-world-war-1.0.0.war',
		                                removePrefix: 'target/',
		                                remoteDirectory: '/tmp',
										execCommand: 'sudo systemctl stop tomcat && sudo rm -rf /var/lib/tomcat/webapps/hello-world-war*.war && sudo mv /tmp/hello-world-war-1.0.0.war /var/lib/tomcat/webapps/  && chown tomcat. /var/lib/tomcat/webapps/hello-world-war*.war && sudo systemctl start tomcat'
		                            )
		                        ]
		                    )
		                ]
		            )
		        }
		    }
		}
		stage('DeployToProduction') {
			when {
				branch 'master'
			}
			steps {
				input 'Does the staging environment look OK?'
			}
		}
		stage('Cleanup') {
			steps {
				cleanWs()
			}
		}    
		
    }
}
